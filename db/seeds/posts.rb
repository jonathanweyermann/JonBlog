Category.create!([
  {name: "Events"},
  {name: "Productivity"},
  {name: "Projects"},
  {name: "Reviews"},
  {name: "Finance"},
  {name: "Tutorials"},
  {name: "Life"}
])
Comment.create!([
  {name: "Roxanne Kokaram", email: "aks@ua.ca", body: "Yeah, that was so cold. I almost died", post_id: 1}
])
Post.create!([
  {title: "Winter Delight", category_id: 2, user_id: 1, tags: "winter, delight", body: "<p class=\"fr-tag\">We had our annual winter delight festival at the Twilleger Community Church, and it was great. Roxy and I were handing out candy to the children coming to see santa. It was fun, but our feet were really cold, especially Roxy's. At least we got to move around a bit and warm up by the fire.&nbsp;I can't imagine how Santa must have felt. He had to sit in the cold for two hours straight.</p>", image_file_name: "santa-elves_wide.png", image_content_type: "image/png", image_file_size: 40224, image_updated_at: "2015-03-13 01:56:35", state: 1},
  {title: "In search of an Android Wiki", category_id: 4, user_id: 1, tags: "Color Note, Pragmatic Thinking and Learning", body: "<p class=\"fr-tag\"><br></p><p class=\"fr-tag\">Having recently read <a href=\"http://www.amazon.ca/Pragmatic-Thinking-Learning-Refactor-Wetware/dp/1934356050/ref=sr_1_1?ie=UTF8&qid=1425063431&sr=8-1&keywords=pragmatic+thinking+and+learning\" rel=\"nofollow\">Pragmatic thinking and Learning</a> by Andy Hunt, I realized I should try to find some way to build a personal wiki. A personal wiki can function like a mind map, and since links can go to anywhere, information doesn't have to be strictly hierarchical.</p><p class=\"fr-tag\">I realized that one of the simple tools I already use,&nbsp;<a href=\"http://www.colornote.com/\" rel=\"nofollow\">Color Note</a>,&nbsp;is capable of creating links to other pages. To do it, you simply add [[ &nbsp;]] brackets around a string of text, and it instantly links to another page. If the page doesn't exist, Color Note will all you to create it once the link is clicked. This has encouraged me to reorganize colorNote.</p><p class=\"fr-tag\">I've noticed that a windows 8 Metro version of Color Note has been released, which has helped made color note more useful for me, but I still wish there was a general web service for it. I realize there are other organizational tools, but I find Color Note the most useful, as its very quick to use, and has a good amout of versatility.</p>", image_file_name: "colornote-intro.png", image_content_type: "image/png", image_file_size: 135973, image_updated_at: "2015-03-13 03:34:03", state: 1},
  {title: "Pragmatic Thinking and Learning ", category_id: 6, user_id: 1, tags: "thinking, learning, pragmatism", body: "<p class=\"fr-tag\"><a href=\"http://www.amazon.com/gp/product/1934356050/ref=as_li_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=1934356050&linkCode=as2&tag=jonathweyerm-20&linkId=DEOGPJZ2Y7GVCLDX\" rel=\"nofollow\">Pragmatic Thinking and Learning</a>, by Andy Hunt,&nbsp;is a book with many techniques for improving your Brain. While there is a lot of information in it, not everything will work for everyone. While I found the first sections, which talk about the drefus model, and how&nbsp;the brain works interesting, I found suggestions earlier in the book rather abstract and&nbsp;difficult to apply practically to my own life.&nbsp;</p><p class=\"fr-tag\">In the second half of the book really has a great deal of practical tips, but you can't expect to retain everything in one reading. I found it helpful to make notes so I could go back and try to apply some of the techniques to my life. Andy explains SQ3R, a method of reading where you prepare yourself before you read in full. He explains how damaging context switching is, and explains ways we can minimize is. He is a big fan of mind-maps, and suggests the use of a personal wiki as an external storage space for your mind, something i'm attempting to do with <a href=\"13\">Color Note</a> at the moment. Even something like keeping a learning portfolio and treating it like a financial portfolio, where you invest time instead of money was interesting to me. While it seems like a no-brainer, the comparision made makes seem more important and urgent. The book is full of these moments where you get a new take on an idea, and I would recommend it for everyone, not just programmers.</p>", image_file_name: "pragmatic-thinking-and-learning1.jpg", image_content_type: "image/jpeg", image_file_size: 41965, image_updated_at: "2015-03-13 01:02:32", state: 1},
  {title: "Buildbox", category_id: 5, user_id: 1, tags: "Mobile, games, buildbox, graphics", body: "<p class=\"fr-tag\"><a href=\"http://www.buildbox.com/\" rel=\"nofollow\">Buildbox</a> is a tool designed to help you build a game from start to finish. Given the success of some of the more popular mobile games, it seems like an enticing idea.&nbsp;Having received a 15 day trail period of Buildbox, I spent a fairly significant chunk of time creating a game (according to my favorite time tracking app&nbsp;<a href=\"http://www.teamviz.com\" rel=\"nofollow\">TeamViz</a>, i've dedicated 40 <a href=\"http://pomodorotechnique.com/\" rel=\"nofollow\">Pomodoro</a>&nbsp;to it). While I did eventually create a game, and was fairly satisfied with the way it played, <a href=\"https://play.google.com/store/apps/details?id=com.chaosx.superduck&hl=en\" rel=\"nofollow\">Superduck</a>&nbsp;has yet to break 10 downloads on the Google Play Store. While I feel that my game felt like a fairly good game compared to a lot of what was out there, I came to realize that the axium of \"Build it and they will come\" is probably not true, and to be successful, I'd have to not only make good games, but learn to promote them well.</p><p class=\"fr-tag\">As for buildbox itself, it delivers on what it promises, though the game feels like it has a bit of a blackbox feel, as the code seems inaccessible inside Android Studio. Thus there is always the feeling that something that could give the game a bit of an edge, such as leaderboards is not completely implementable.</p><p class=\"fr-tag\">While buildbox has allowed its creators to put out some great games rather fast, their success with the games has a lot more to do with how they market them. The average joe creating his first game isn't to have nearly the same magintude of success. Still is a good experience though, but not one worth upwards of $2600.</p>", image_file_name: "buildboxlap.png", image_content_type: "image/png", image_file_size: 220227, image_updated_at: "2015-03-13 02:05:05", state: 1},
  {title: "The importance of bounded time", category_id: 4, user_id: 1, tags: "pomodoro, time management", body: "<p class=\"fr-tag\">Even since I've started using the <a href=\"http://pomodorotechnique.com/\" rel=\"nofollow\">pomodoro</a> technique, I feel like my productivity has increased greatly. For those who don't know, a pomodoro is a bounded unit of time, during which one is to do their best not to get distracted. It is a unit of work during which checking your e-mail is a no-no. Pomodoro is the italian word for tomato, because the technique was orignially applied using a tomato timer. Typically the pomodoro interval is 25 minutes, with a 5 minute break, and a 15 minute break after 4 pomodoro.</p><p class=\"fr-tag\">The idea is that bounding your time helps increase productivity. This is based on parkinson's law, which states that t<span>he demand on a resource tends to expand to match the supply of that resource. When applied to time, it means that any project, regardless of how complex, will expand to fill in the allotted time. Time will get taken up due to unnecessary revising and reediting, or most likely because of procastination. A project with a long deadline doesn't appear very urgent, and thus we're unlikely to tackle it until that deadline is looming.</span></p><p class=\"fr-tag\">For me, it often helps to get over a hump. When I dread a task, using the promodoro technique can encourage me to get started, as I know that after 25 minutes I can have a break. Often by then I'm totally into my work, and don't need it. I find it's helpful to have a way to not only track the 25 minute intervals, but to add them up and record them. My favorite tool for this task is <a href=\"17\">Teamviz</a></p>", image_file_name: "Il_pomodoro.jpg", image_content_type: "image/jpeg", image_file_size: 324967, image_updated_at: "2015-03-13 03:01:18", state: 1},
  {title: "Lending Loop Experiment ", category_id: 7, user_id: 1, tags: "", body: "<p>While there have been many online peer to peer lending opportunities open to US citizens, such as Prosper and Lending Club, lending options in Canada have been non-existent in Canada until October 2016, when Lending Loop received regulatory approval to offer its platform in Canada. Lending Loop is now making loans to dozens of Canadian businesses, and has over 10,000 investors.</p><p>I&#39;d like to share my current result with the platform, &nbsp;and my impressions thus far.&nbsp;</p><p>As you can see from the screen shot above, I&#39;m currently up $129 with a total investment of around $2900. I&#39;ve made the contributions very slowly over the last year. &nbsp;For most of the businesses I have only invested $25(the minimum), though when I made my Initial $1000 deposit, there were few businesses, so I allocated $150-$200 to some of the early ones. There is one business which has been delinquent as of late, meaning the payments are not made on time, but I suspect they will catch up eventually. However, I can&#39;t expect my return to actually 14%, as some loans will inevitability be defaulted on.</p><p>The loans range in various lengths, most between 18 months to 4 years, and get paid back every month in chunks, part interest, part principal. &nbsp;Thus, in order to make the full return expected, one must continually reinvest the proceeds. This doesn&#39;t bother me though, as the returned capital allows more diversification and reduces risk. However, you will never make the full returns if you don&#39;t reinvest your principal.&nbsp;</p><p>Unlike mutual funds and other stock market investments, lending loop does not support RRSP and TFSA at this point, which means that all your gains will be unfortunately taxed at your marginal tax rate. An investment like this would greatly benefit from TFSA, because interest doesn&#39;t count as capital gains, and is thus fully taxes. Lending loop hopes to eventually offer TFSA and RRSP&#39;s however.</p><p>Lending Loop has recently added auto-deposit and auto-invest, allowing you to automatically deposit funds at regular intervals, and automatically invest predetermined amounts (in multiples of $25) in either low risk (6-9%) or high risk (10-25%) . I&#39;ve chosen to automatically invest $25 in all high risk opportunities, and try to match my contribution interval to not have too much money in the account. Once the contribution windows gets too long (ie 4 weeks or more), I&#39;ll up investment amount to $50 per investment. Its good to have some spare money sitting in the account, as some loan requirements are satisfied almost immediately</p><p>If you&#39;d like to invest with Lending Loop, please use my referral link <a href=\"https://www.lendingloop.ca/?code=0e40f4\">https://www.lendingloop.ca/?code=0e40f4</a>&nbsp;</p><p>I&#39;ll try to post updates of my progress at regular intervals</p>", image_file_name: "lending_loop.png", image_content_type: "image/png", image_file_size: 77626, image_updated_at: "2017-09-17 22:37:42", state: 1},
  {title: "Dream Trainer Ruby App", category_id: 5, user_id: 1, tags: "Ruby, Ruby on Rails, Rails, App, learning, training, quizzes", body: "<p class=\"fr-tag\">My work for the <a href=\"http://www.edmontondreamcentre.ca/\" rel=\"nofollow\">Edmonton Dream Centre</a>, and a course on Technology for Teachers&nbsp;inspired me to try to build an educational platform that would function both as a testing tool and a learning platform. While quiz-making apps exist, most do not support the creation of even rudimentary learning modules. Even educational tools typically cater more to Quizzes (for instance<span>&nbsp;</span><a href=\"http://www.socrative.com/\" rel=\"nofollow\">Socrates</a>), or more on learning content, at the expense of testing (<a href=\"https://www.blendspace.com/\" rel=\"nofollow\">Blendspace</a><span>&nbsp;</span>comes to mind).</p><p class=\"fr-tag\">The Dream Trainer is an attempt to combine both learning modules and testing (multiple choice, for now) in a single web interface. While designed for the Edmonton Dream Centre, it will be made available to the public as well.</p><p class=\"fr-tag\">Unlike more open platforms like<span>&nbsp;</span><a href=\"https://www.udemy.com/\" rel=\"nofollow\">Udemy</a>, Students or Employees (leaners) will only be able to participate through an invite from an instructor, making it ideal for a classroom or a business where information should not be made available to the public. Each instructor will have their own private space to create modules and quizzes, and the people he invites will be able to view only the one instructor&#39;s material.</p><p class=\"fr-tag\"><br></p><p class=\"fr-tag\">The app is made with ruby on rails, and is available at <a href=\"http://trainer.jonathanweyermann.com\">trainer.jonathanweyermann.com</a></p>", image_file_name: "China.png", image_content_type: "image/png", image_file_size: 538217, image_updated_at: "2015-03-13 04:42:18", state: 1},
  {title: "Five ways of Beating Procrastination", category_id: 4, user_id: 1, tags: "procrastination, putting it off", body: "<p class=\"fr-tag\"><strong><span style=\"line-height: 19.6000003814697px;\">1) Eliminate distractions</span></strong></p><p class=\"fr-tag\">For me this involved conciously blocking some website on my installed browsers. While I put this off for a long time, because I convinced byself I would merely circumvent the block when I wanted to view the site, this really helped. Somehow having the site return as blocked was enough to snap me back to what I needed to do. Keep your PC work environment clear of distracting programs you should not be using, and make them more difficult to access. Surprisingly, its much easier to convince your mind to not do something if you add extra steps required to do it.</p><p class=\"fr-tag\"><br></p><p class=\"fr-tag\"><strong>2) Make Lists</strong></p><p class=\"fr-tag\"><span>A list of tasks with an approximate timeline will encourage you to stay on task</span>If you don't have something specific you wish to accomplish in a particular time, its easy to get distracted. As David Allen explains in <a href=\"http://www.amazon.ca/Getting-Things-Done-Stress-Free-Productivity/dp/0142000280/ref=sr_1_1?ie=UTF8&qid=1426647181&sr=8-1&keywords=getting+things+done\" rel=\"nofollow\">Getting Things Done</a>,&nbsp;it's helpful to break down goals to the next Actionable step, the next action you have to take to complete a task.. Its important to be realistic, but not be too forgiving with time allocated to tasks, or you will doddle.</p><p class=\"fr-tag\"><br></p><p class=\"fr-tag\"><strong>3) Limit&nbsp;Time</strong></p><p class=\"fr-tag\">Use the <a href=\"16\">Pomodoro Technique</a>, or something similar to set a time window where you will commit to being completely focused. Any distracting thought that comes to mind should be recorded for later, not acted upon. You lose tremendus productivity by context switching</p><p class=\"fr-tag\"><br></p><p class=\"fr-tag\"><strong>4) Remove Automated Distractions</strong></p><p class=\"fr-tag\">Unless the work involves your Email, do not check E-mails between bounded time windows, and don't have your Email client automatically refresh incoming mail. Turn off social networks, or anything else that automatically interrupts and distracts</p><p class=\"fr-tag\"><br></p><p class=\"fr-tag\"><strong>5) Keep it simple</strong></p><p class=\"fr-tag\">Don't try to make time management too fancy. If you system has too much overhead, it will reduce productivty and be tedious. Also, stick with your system, and don't try to reinvent it every week. There is a point where looking for new productivity hacks becomes a way to procastinate.</p><p class=\"fr-tag\"><br></p>", image_file_name: "Procastination.jpg", image_content_type: "image/jpeg", image_file_size: 199098, image_updated_at: "2015-03-18 03:33:01", state: 1},
  {title: "Creating vs Consumption and happyness", category_id: 9, user_id: 1, tags: "", body: "<p>Are producers of content (writing, &nbsp;music, TV, &nbsp;video games, &nbsp;software) happier than those who consume it? Does happiness come from consuming content, &nbsp;or producing it? Some would argue that people who only consume content are watching, listening or reading about others living their lives.</p><p>I think we need both to be happy. &nbsp;Sometimes you may just want to indulge and watch your favorite series, or play lots of video games. This brings happiness in the moment, &nbsp;and for a time afterwards. It can even be a great shared experience that allows you to bond with others. &nbsp;Mostly I want to use my smartphone to catch up on news or browse random stories or forums, without making meaningful comments or contributions. Consuming content is definitely easier than producing content, &nbsp;especially materials of the quality others would want to consume.&nbsp;</p><p>To truly achieve long term happiness, &nbsp;producing content is much more meaningful, especially if many people benefit from it. This second point is sometimes the issue with producing content. &nbsp;You can put things out there, &nbsp;but getting other people to consume it can be difficult. You should not let that discourage you. If you want to be a writer, a speaker, a designer, a developer or an actor, you should be willing to do all those things regardless of your audience. Passion for these things must long precede success, for without it, &nbsp;you will give up long before any success comes.</p><p>The advent of social media has given many of us an audience for our content. &nbsp;But are we actually contributing anything meaningful or helpful to someone else? Many of us just use social media to build up an image of ourselves, &nbsp;to make us feel better by sharing our most noteworthy moments in life. It even seems like a financially successful strategy for some, sharing images of themselves on instagram. While it may be a good way to gather an audience, I think eventually it would be more fulfilling to be using it as a platform for our art or our writing, to contribute something meaningful to teach, &nbsp;mentor and lift up other people.</p><p><br></p><p><br></p>", image_file_name: "YinYang-economy.jpg", image_content_type: "image/jpeg", image_file_size: 16435, image_updated_at: "2017-09-10 02:26:51", state: 0},
  {title: "Expensive financial lessons from my own life", category_id: 7, user_id: 1, tags: "", body: "<p>1) Don&#39;t put all your eggs in one basket</p><p>Before the financial crisis, real estate in Alberta was booming, and my Dad and I were trying to get a piece of the action. Not really understanding enough about the company we were investing with, we made a real estate investment that involved developing some land in the Crowsnest Pass to be vacation real estate. While this investment had many problems in retrospect (the Crowsnest Pass is not the hotbed of tourism as places actually in the rockies, the company was a ponzi scheme which took investor&#39;s money and funneled it to previous projects which were not paid for yet, and that vacation real estate is highly volatile), the biggest problem is entirely of our own making. We invested far too much of our assets into a single investment. The promised returns were good, but many businesses lent to by <a href=\"http://www.jonathanweyermann.com/posts/10\">lending loop</a> offer very similar returns, and you can diversify your investments among many businesses. We were pretty much going all in, and we lost nearly everthing.</p><p>2) Don&#39;t try to chase the daily returns of the forex or stock market</p><p>No matter which secret formula I purchased from so-called gurus, I couldn&#39;t successfully make profits chasing the markets using technical indicators. Perhaps there are some who can, but it&#39;s a lot harder than it looks. If someone could teach it you using a couple indicators for $49, or even $1049, almost anyone could do it.</p><p>3) Forex robots are junk</p><p>Again, if there was a way to consistantly profit in forex, would someone really sell it to you for $149? Most forex robots are scalpers or martingale systems, which often appear to make small profits, but will eventually take massive losses in the long term. Making your own forex robot that&#39;s successful isn&#39;t easy, as adding more rules (just like in any trading system) doesn&#39;t necessarily make the system better. Markets change too, and what was successful in the past often doesn&#39;t work today. If someone offers you a system that guarantees automatic forex profits, run away as fast as you can.</p><p>4) Buying or selling options ahead of company earnings is a sure way to lose money fast</p><p>Trading options for a such a short term window is highly speculative. Options can be part of balanced portfolio to hedge losses, and can be used to increase your trading leverage over the medium to long-term, but the movement of stock after earnings can be highly irrational. Stocks can move down on good news, for instance. Often purchasing options can produce losses if the stock doesn&#39;t move far enough in the desired direction, as the volatility decreases after the earning announcement, making the option much less valuable. Selling option can be lucrative before earnings, until you hit a really big move, and you have massive losses.</p><p>5) Don&#39;t make investment decisions based on the day to day news of companies and speculations thereof</p><p>Successful investors don&#39;t let the daily company news scare them, but are in it for the long haul. Speculations about production problems of the iPhone 8 isn&#39;t going to make long-term AAPL investors flinch, for instance. While following company news and technical charts can be exciting, if it causes you to touch your investments, it&#39;s probably not a good thing. Time in the stock market is usually more important than trying to time the market. Also, if every time you hear bad news you buy the stock&#39;s put options to safeguard from losing, you&#39;ll lose by default because you&#39;ve paid for so much premium that it erodes your gains. Seemingly every week someone has a theory on why a stock will decline, and they&#39;re usually wrong. Same with the market as a whole. As they say, experts have predicted 23 out of the last 3 market crashes...</p>", image_file_name: "Trading-Fear-Of-Loss-Greed-Of-Winning-Finance-Illustrated-768x487.png", image_content_type: "image/png", image_file_size: 119186, image_updated_at: "2017-09-09 05:03:09", state: nil},
  {title: "Hosting an inexpensive static website with Amazon S3", category_id: 8, user_id: 1, tags: "AWS, S3", body: "<p>The beauty of AWS (Amazon Web Services) is that many services are per use, making low traffic sites very cheap to host. This is especially so if you create a static website which doesn&#39;t make use of Amazon EC2&#39;s. This can be achieved with AWS&#39;s S3 (Simple Storage Service). For many small businesses that don&#39;t have a lot of dynamic content on their site, and for which a content management system like Wordpress may be overkill, hosting a simple static site using S3 may be the way to go.</p><p>Unfortunately, using a S3 Bucket will require custom web design, as web hosting is not the primary purpose of S3. If you wish to design a site using drag and drop tools, using <a href=\"https://www.weebly.com\">Weebly</a> or a similar tool may be much easier. However, for those with free time, the need to customize, and the desire to get past a lot of its limitations, an amazon S3 static website may be the way to go</p><p><br></p><p><strong><span style=\"font-size: 18px;\">AWS Setup</span><br></strong></p><p>1) You need at least a <a href=\"https://aws.amazon.com/free/?sc_channel=PS&sc_campaign=acquisition_CA&sc_publisher=google&sc_medium=cloud_computing_hv_b&sc_content=aws_core_e&sc_detail=aws&sc_category=cloud_computing&sc_segment=188900277247&sc_matchtype=e&sc_country=CA&s_kwcid=AL!4422!3!188900277247!e!!g!!aws&ef_id=V6FWXAAABHEZSz8g:20170909033511:s\" rel=\"noopener noreferrer\" target=\"_blank\">free Amazon AWS account</a> (1st year you&#39;ll be in free tier (up to 5gb), after that it costs a small amount, depending on storage and network usage)</p><p>2) Once in the AWS Console, you need to navigate to S3 to create a new S3 bucket and set it to enable static hosting&nbsp;</p><ol><li>on bucket creation, ensure you allow public access to read the bucket in &#39;Manage Public Permissions&#39;</li><li>Once you create the bucket, click into the bucket, go to &#39;Properties&#39;, and click on &#39;Static Website Hosting&#39; and select &#39;Use this bucket to host a website&#39; and set the index.html (setting it it to index.html is fine)</li></ol><p>3) You can setup Cloudfront to serve S3 objects to speed up the site</p><p>&nbsp; &nbsp; &nbsp;1) Aws should automatically prepopulate your s3 bucket in the &#39;origin domain name&#39; field</p><p>&nbsp; &nbsp; &nbsp;2) Other options can be left at default, and you can click &#39;Create Distribution&#39; at the bottom</p><p>4) Then you can point Route 53 to your Cloudfront distribution (you will need to register a domain for $10/year)</p><p>&nbsp; &nbsp; &nbsp;Once you have your domain, inside &#39;Hosted Zones&#39;, click on &#39;Record Set&#39;, and select CNAME and turn on the Alias radio button. AWS should auto-find your cloudfront distribution which you can point to your domain (or a subdomain</p><p><br></p><p><strong>Website Setup and deployment</strong></p><p>While you can use just static CSS and HTML, using a framework like foundation that allows the use of sass, and gives a lot of guidance with layout and styling over HTML5. Therefore, I recommend installing <a href=\"http://foundation.zurb.com/sites/docs/installation.html\">Foundation</a>, specifically the Manual setup.&nbsp;</p><p>once installed, run&nbsp;</p><p><em>npm start </em></p><p>to set up the local server for development</p><p>to create your production ready assets, run</p><p><br></p><p><code>npm run build</code></p><p><br></p><p>you then use the aws CLI to directly copy the dist (production folder) to s3, and you can invalidate cloudfront to ensure the website is refreshed</p><p>if you don&#39;t have it already, <strong>you will need to <a href=\"http://docs.aws.amazon.com/cli/latest/userguide/installing.html\">install</a> the AWS command line interface on your computer</strong></p><p>you will then be able to use use the following commands to deploy your app and to invalidate (refresh) your cloudfront distribution</p><p><br></p><p><em>aws s3 cp dist/ s3://bucketname --recursive<br></em></p><p>aws configure set preview.cloudfront true</p><p>aws cloudfront create-invalidation --distribution-id YOURDISTRIBUTIONID --paths &quot;/*&quot;</p><p><br></p><p>aws cloudfront invaliations can only be done from the command line life have preview mode on. The distribution id is the unique identifier tied to your cloudfront distribution</p><p><br></p><p>I recommend putting both the build and copy steps into a deploy script, so you can push to your site easily whenever you make a change locally.</p><p>Creating a second test bucket which you push to first will allow you to create a staging environment so you can test changes before they go live</p><p><br></p>", image_file_name: "AWS_S3.png", image_content_type: "image/png", image_file_size: 652504, image_updated_at: "2017-09-19 23:17:56", state: 1},
  {title: "My 5 top tips to becoming a better software developer", category_id: 8, user_id: 1, tags: "Software Development", body: "<p><strong>1. Ask less questions</strong></p><p>You&#39;ll never truly understand something if you always ask your fellow developers after the first signs of trouble. Commit to spending some time understanding something new before you ask for help. While an expert on your team may be able to solve the problem quicker this time, having the result handed to you can stunt your growth and limit your own learning. This doesn&#39;t mean you should never ask for help however. If you can&#39;t make any progress on something for what seems like an unreasonably long time, it can better to ask just to get moving in your current project, but keep in mind that this reduces your own growth as a developer&nbsp;</p><p><br></p><p><strong>2. Move fast and break things</strong></p><p>The main argument I would make here is to look at the big picture and try to bump into all the problems as fast as possible. &nbsp;For instance, as a web developer, &nbsp;there is no point optimizing the code or styling the first page in a web funnel if you interact with external apis in the next few steps for which you rely on another team. &nbsp;If there is an issue, &nbsp;it&#39;s better the other team knows as soon as possible. It&#39;s important identity things in your project that you may rely on a third party for first, &nbsp;so you can give others the most amount of time to respond and address the issue. In the meantime, &nbsp;you will have lots of time to refactoring your code, &nbsp;add caching and optimizations, &nbsp;and increase your test coverage.&nbsp;</p><p>This also applies to problems you run into on your own. &nbsp;Instead of letting something hold you up for a long time because you don&#39;t know how to elegantly solve it, &nbsp;do what you have to to move past the problem for now. Your unconscious mind may help you come up with a solution when you least expect it. Treat your keyboard time preciously, &nbsp;and leverage your mind while away from the computer <span style=\"background-color: initial;\">by bumping into as many difficult issues as you can while at the computer. </span></p><p><strong>3. Always leave the code base better than how you found it</strong></p><p>Don&#39;t ultimately aim for the quickest solution when adding to a code base, &nbsp;but always try to write code in a way that makes structural sense. You and your fellow developers may be maintaining and adding to a codebase for a long time, so it&#39;s important that the code is self-documenting, and thus easy to understand by yourself and others in the future. Less is more in software development, so if you can reduce the amount of code in your codebase by refactoring out common code and put it in modules, superclasses and gems(libraries), you should. However, don&#39;t immediately try remove any and all duplication. If it&#39;s not apparent to you which method of code abstraction you should use,&nbsp; remember that duplication is still better than using the wrong abstraction. Also, don&#39;t reinvent the wheel: if functionality you need can be found in an external library, you&#39;re mostly better of using that than writing extra code yourself.</p><p><br></p><p><strong>4. Automate and Standardize whoever you can</strong></p><p>Th<br></p>", image_file_name: nil, image_content_type: nil, image_file_size: nil, image_updated_at: nil, state: nil},
  {title: "TeamViz", category_id: 5, user_id: 1, tags: "time management, productivity, recording", body: "<p class=\"fr-tag\">TeamViz is by far my favorite time management tool. At the very basic level it is a <a href=\"16\">pomodoro</a> tracking tool. It even sounds like a tomato timer. But it&#39;s so much more than that. It allows you to plan tasks in multiple categories and split them into Pomodoro. It allows you to assign an estimated number of pomodoro to a task which you can change at any time. Unlike other pomodoro tools i&#39;ve tried, it doesn&#39;t try to limit your pomodoros per task to 6 or 7 before splitting it up, and this gives a lot more flexibility if you wish to group certain kinds of tasks into one.&nbsp;</p><p class=\"fr-tag\">Another thing I love about it is the reports feature. It allows one to review the number of pomodoros done in the past, and shows a very pretty graph. There is limit to far back you can go, and it is thus easy to assess and track your progress.&nbsp;It encourages me to try for more pomodoro to break previous weekly or daily records.&nbsp;A key feature of the pomodoro is that distracting thoughts or tasks are to be written down for later, and teamviz allows for that as well.</p><p class=\"fr-tag\">TeamViz is not without some faults however. The most glaring is that the android version is completely unreliable. Typically it will crash before the timer is up, and thus i&#39;ve given up its use altogether. The desktop version are generally stable, but they do have the occasional graphical glitch. For instance, the program can&#39;t display pomodoro past 99 on the main interface window, and the rows of pomodoro on the timer window tends to run off the screen.</p><p class=\"fr-tag\">Nevertheless, it is the best combined pomodoro/overall project tracker that i know of. Typically it takes two programs to accomplish what TeamViz does, and I find that too cumbersome to be practical.</p><p class=\"fr-tag\">At this point all the features seem to be free, although the <a href=\"http://www.teamviz.com\" rel=\"nofollow\">company website</a> states that the synchronization is actually $1.99 a month. If this ever got enforced, I would have to upgrade, as its a must have feature, as TeamViz runs on all of my computers, on both windows and ubuntu, and without the synchronzie feature it would lose a lot of its appeal.</p><p class=\"fr-tag\"><br></p>", image_file_name: "TeamViz.png", image_content_type: "image/png", image_file_size: 256144, image_updated_at: "2015-03-13 03:30:04", state: 1},
  {title: "The Fermi Paradox", category_id: 9, user_id: 1, tags: "", body: "<p><br></p><p>In the the milky way alone, there are 400 billions stars. There are perhaps 20 billion like our sun, with perhaps 1/5th of them with earth-like planets in their habitable zone - where life could exist. If 0.1% of these had life, there would be 1 million planets with life. &nbsp;This leads to an important question</p><p>Where are all the aliens?</p><p>It gets even worse when you recognize that the sun is much younger than many of the other stars in the galaxy, billions of years, in fact. Life on other planets around other stars in the milky way could have conceivably existed for more than 7 billion years before the earth was even formed. Even if one of these had become a space travelling super civilization we would have noticed by now. &nbsp;This is because an advanced alien species should be able to to colonize the galaxy in matter of 2 million years or less, &nbsp;assuming a slow, &nbsp;but exponential expansion.</p><p>This question regarding the apparent contradiction of the age abd vastness of space versus its apparent emptiness is called the Fermi paradox</p><p><br></p><p>The Great Filter</p><p>Some have speculated that there must be some point along their evolution that species were prevented from progressing. If this happened on most planets earlier in their evolution ( the great filter is before us), there may be many planets with single celled creatures, or simple animals out there, but it the evolution of life to a complex and advanced species like humans may be exceedingly rare.&nbsp;</p><p><span style=\"background-color: initial;\">However, the emergence of life itself may be a great filter, which would make the di</span><span style=\"background-color: initial;\">scovery of single celled life on Mars very bad. This is the possibility that keeps some scientists up at night, as such a common occurrence of life probably means the great filter is after us.</span></p><p>Of course, there is always the possibility that aliens are in fact out there, but just avoiding contact. Perhaps they have a prime directive, like in star trek. Or they don&#39;t interact, just like we don&#39;t interact with insects. Or they just hide, but then wipe anyone out once they reach a sufficiently advanced level of technology. &nbsp;Maybe colonizing the galaxy just isn&#39;t the goal when you get to that level of technology</p><p>Or maybe there is this chance, however remote, that we&#39;re the most advanced species currently in the galaxy, a blue dot all alone in the vast emptiness of space. &nbsp;Perhaps we will never know in our lifetime. Currently, the Fermi paradox is something so incredibly humbling, because it makes you feel so small, and because the ideas of the brightest minds of our era diverge so greatly on this, its as if we&#39;re back to arguing whether the earth is flat or the centre of the universe.</p><p>Regardless of whether there is a great filter, or our destruction by aliens in the future, or whether we&#39;re alone, I like to appreciate that we exist at all, and try to weigh the stress and busyness of the day in the light of our small place and time in the universe.&nbsp;</p><p><br></p><p><em>The short post was originally written for a Toastmasters speech, and only provides a basic overview of this fascinating topic. Most of the facts come from the excellent YouTube video on the Fermi Paradox by Kurzgesagt</em></p>", image_file_name: "CQVnB94VAAABDC0.jpg", image_content_type: "image/jpeg", image_file_size: 106600, image_updated_at: "2017-09-27 02:19:13", state: 1},
  {title: "Advanced Decent Exposure usage", category_id: 8, user_id: 1, tags: "Rails,  Decent Exposure,  controller cleanup", body: "<p>Rails controllers traditionally have a lot of duplication, as any object instance typically has to available in multiple actions, typically even in different states. For example, here is a sample of posts_controller</p><pre>class Admin::PostsController &lt; Admin::ApplicationController\r\n\r\n  def new\r\n    @post = Post.new\r\n  end\r\n\r\n  def create\r\n    @post = Post.new(post_params)\r\n\r\n    if @post.save\r\n      flash[:notice] = &#39;Post Created&#39;\r\n      redirect_to admin_posts_path\r\n    else\r\n      render &#39;new&#39;\r\n    end\r\n  end\r\n\r\n  def show\r\n    @post = Post.find(params[:id])\r\n  end\r\n\r\n  def edit\r\n    @post = Post.find(params[:id])\r\n  end\r\n\r\n  def update\r\n    @post = Post.find(params[:id])\r\n    if @post.update(post_params)\r\n      flash[:notice] = &#39;Post Updated&#39;\r\n      redirect_to admin_posts_path\r\n    else\r\n      render &#39;new&#39;\r\n    end\r\n  end\r\n\r\n  def destroy\r\n    @post = Post.find(params[:id])\r\n    if @post.destroy\r\n      flash[:notice] = &#39;Post Removed&#39;\r\n    end\r\n    redirect_to admin_posts_path\r\n end\r\n\r\n  def index\r\n    @posts = Post.all.order(&#39;created_at DESC&#39;).paginate(:per_page =&gt; 10, :page =&gt; params[:page])\r\n    end\r\n  end\r\n\r\n  private\r\n  def post_params\r\n    params.require(:post).permit(:title, :category_id, :user_id, :tags, :image, :body)\r\n  end\r\nend</pre><p><br></p><p>With Decent Exposure, &nbsp;much of the duplication is removed. Decent exposure gives you an easy way to expose an object in every action of your controller and figures out the appropriate action, &nbsp;based on whether the object instance can be found. The above example becomes just this</p><pre>class Admin::PostsController &lt; Admin::ApplicationController\r\n  \r\n  expose(:post)\r\n\r\n  def create\r\n    if post.save\r\n      flash[:notice] = &#39;Post Created&#39;\r\n      redirect_to admin_posts_path\r\n    else\r\n      render &#39;new&#39;\r\n    end\r\n  end\r\n\r\n  def update\r\n    if post.update(post_params)\r\n      flash[:notice] = &#39;Post Updated&#39;\r\n      redirect_to admin_posts_path\r\n    else\r\n      render &#39;new&#39;\r\n    end\r\n  end\r\n\r\n  def destroy\r\n    if post.destroy\r\n      flash[:notice] = &#39;Post Removed&#39;\r\n    end\r\n    redirect_to admin_posts_path\r\n end\r\n\r\n  def index\r\n    @posts = Post.all.order(&#39;created_at DESC&#39;).paginate(:per_page =&gt; 10, :page =&gt; params[:page])\r\n    end\r\n  end\r\n\r\n  private\r\n  def post_params\r\n    params.require(:post).permit(:title, :category_id, :user_id, :tags, :image, :body)\r\n  end\r\nend</pre>", image_file_name: nil, image_content_type: nil, image_file_size: nil, image_updated_at: nil, state: nil},
  {title: "The compounding principle and the power of habit", category_id: 4, user_id: 1, tags: "", body: "<p>While it can be easy to see how money can compound given enough time, as its just fairly simple mathematics, admittedly with some assumptions, it can be more difficult to see and get excited about the impact of consistently and habit, &nbsp;and the compounding effect it can have on your life.&nbsp;</p><p>If you were to take even $25/week and invest it in the stock market, after 10 years you would have about $20000, after 20 years $63000 and after 30 years $160000. This is both due to the weekly investing and the compounding. This is easy in a sense because you can do it automatically, and while the growth is slow, it is easy to measure.</p><p>When it comes to other aspects of life, such as learning a skill, your career, your health, &nbsp;relationships, hobbies, &nbsp;contributions to society and overall happiness, measuring becomes much more difficult. However, &nbsp;I still believe it can be measured. And if it can be measured, it can be improved. Just like the stock market, these things don&#39;t go up in a straight line, and you may have setbacks, and your knowledge may plateau, but over the course of many months and years, &nbsp;things should generally improve. Just like with the stock market, &nbsp;you must make regular deposits, investments of time to grow the other aspects of your life, &nbsp;or they just happen to you and you will make little progress.</p><p>If you want to improve your health, &nbsp;for instance, you don&#39;t start by running a marathon and then consider health accomplished and never run again. Starting off too strong is a sure way to get burnt out. Instead, realize that you have 168 hours a week and 52 weeks a year. If you commit to just half an hour a day to anything, &nbsp;you will have committed 180 hours a year, or nearly 5 work weeks to it. That&#39;s enough to run the distance of 40 marathons, even if you start off at a really slow pace. &nbsp;It&#39;s enough time to read 20 books, or start and maintain a blog, &nbsp;or write a short book, or learn and improve a number of skills.</p><p>The key is to use the power of habit, and public accountability to become better at something that&#39;s hard for you normally. Often,&nbsp; just like investment,&nbsp; it&#39;s best to pay yourself first. Perhaps if you find it hard to exercise, you should&nbsp;</p>", image_file_name: nil, image_content_type: nil, image_file_size: nil, image_updated_at: nil, state: nil},
  {title: "Fastest way to create an Amazon EC2 Ruby on Rails box", category_id: 8, user_id: 1, tags: "", body: "<p>This tutorial will assume you have an amazon web services account. If you don&#39;t, its easy to create at <a href=\"//aws.amazon.com.\">aws.amazon.com.</a> You will need a credit card, but everthing in this tutorial will come under the free tier (for one year).&nbsp;</p><p><br></p><p><strong>A) Spin up the EC2</strong></p><p>1) go to the EC2 section, click instances, and &#39;Launch Instance&#39;</p><p>2) Click &#39;Community AMIs&#39;</p><p>3) Search for &#39;Ruby on Rails&#39;</p><p>4) Choose &#39;webapp_nginx_rails_passenger&#39;</p><p>5) pick t2.micro (or something larger if you want, but t2.micro is the free tier)</p><p>6) if it&#39;s the only instance you&#39;ll be running on this account, you can click &#39;Review and Launch&#39;, otherwise make sure it&#39;s in the VPC you want. You can configure storage options and a host of other details if you wish, but it&#39;s not necessary.</p><p>7) Click Launch, select &#39;Create a new key pair&#39;, and enter a key pair name, and download the keypair - be sure to keep this file, as you will need it to access your instance by ssh. You can now click Launch to launch the instance.</p><p>8) go back the EC2 main page, click &#39;instances&#39; and you should see your running instance (or see it getting ready, at least)</p><p>9) go to the vpc section, click the vpc your ec2 was launched in, click Actions, Edit DNS Hostnames, and select &#39;Yes&#39;. This will allow you to view your instances -Public DNS (IPv4) address. You can now go back to your ec2, and copy the Public DNS address (the format is something like <a href=\"http://ec2-35-133-139-01.us-west-2.compute.amazonaws.com\">ec2-35-133-139-01.us-west-2.compute.amazonaws.com</a></p><p><strong>B) Accessing your instance</strong></p><p>open a terminal window &nbsp;(if you&#39;re using Windows, use <a href=\"http://www.putty.org/\">PuTTy</a> to ssh) and and add your keypair (for example, if you called the keypair &#39;demo&#39; and placed it in ~/.ssh, the command would be&nbsp;</p><p><em>chmod 400 ~/.ssh/demo.pem</em></p><p><em>ssh-add &nbsp;~/.ssh/demo.pem</em></p><p>The first command reduces your permissions to make the pem file valid to use, which the second command adds it to your ssh keys&nbsp;</p><p>you should now be able to access the instance with using the ubuntu user and the public DNS</p><p><em>ssh ec2-user@</em><em><a href=\"//ec2-35-133-139-01.us-west-2.compute.amazonaws.com\">ec2-35-133-139-01.us-west-2.compute.amazonaws.com</a></em></p><p><em>sudo service nginx start</em></p><p><br></p><p><br></p><p><br></p><p><br></p><p>9) click on &#39;Elastic IPs&#39;, click Allocate new address, and the Allocate, copy the Elastic IP to clipboard and click Close</p><p>10) click on Actions, Associate Address, click on &#39;select an instance&#39; and find your instance, find the private ip of your instance, and click Associate.</p><p><br></p><p><br></p>", image_file_name: nil, image_content_type: nil, image_file_size: nil, image_updated_at: nil, state: nil}
])
